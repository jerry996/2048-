1.在初始化函数中用两个for循环生成4*4的16个格子（两次循环分别用i和j，拼接起来赋给id），调用两次随机生成格子和绑定函数的事件。
2.随机生成2或4的数字，新建一个随机数，把新生成的格子上加上一个class类名。为了保证每次生成的格子和上一个不是重复的，就判断此格子有没有后加的class类名，如果有就在生成一个，没有就给格子一个4或者2的数字。
3.绑定上下左右事件，根据事件源对象判断按键，按键之后有数字的格子运动并进行合并，合并之后生成一个新的格子，再把格子中最大的数字找到，放入计分板里面
4.向下运动，取到当前的和下一位的id值。
给每个有数字的格子进行循环，获取格子里的数字，找到当前格子和下一位格子（如果格子在边界，获取到的下一位格子是自己）
如果下一个格子不是现在的格子并且下一个格子为空，那么现在格子里内容清空，移除class类名，给下一个格子添加数字和class类名，进行递归调用，就可以一直移动到边界或者有格子的地方。
如果下一个格子里有数字，并且下一个格子的数字和现在格子的数字相等（要合并），并且下一个格子和现在格子的id值不同（不在边界），那么两个格子数字相加，赋值给下一个格子，清空现在格子里的数字。获取下一个格子的id值，进行运算找到当前格子的id值，把当前格子的id值格子的class类名去掉。
